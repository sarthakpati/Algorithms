# Compose an FL plan in JSON/YAML.
# The plan is consumed by
#  bin/create_pki_for_flplan.py, 
# bin/run_inference_from_flplan.py, bin/run_simulation_from_flplan.py,
# bin/run_aggregator_from_flplan, bin/run_collaborator_from_flplan, and
# bin/create_initial_weights_file_from_plan.py 

aggregator_object_init:
  init_kwargs:
    rounds_to_train: 200
    init_model_fname: pt_3dresunet_brainmagebrats_init.pbuf 
    latest_model_fname: pt_3dresunet_brainmagebrats_latest_1.pbuf
    best_model_fname: pt_3dresunet_brainmagebrats_best_1.pbuf

model_object_init:
  class_to_init: fets.models.pytorch.pt_3dresunet.pt_3dresunet.PyTorch3DResUNet
  init_kwargs:
    base_filters: 30
    min_learning_rate: 0.000001
    max_learning_rate: 0.001
    learning_rate_cycles_per_epoch: 0.5
    loss_function: dc
    opt: sgd
    use_penalties: False

collaborator_object_init:
  init_kwargs:
    polling_interval  : 4
    opt_treatment     : 'CONTINUE_LOCAL'
    send_model_deltas : False
    epochs_per_round  : 1.0

network_object_init:
  defaults_file: defaults/network.yaml
 
data_object_init:
  class_to_init: fets.data.pytorch.gandlf_data.GANDLFData
  data_name_in_local_config: gandlf_resunet_config_1
  init_kwargs: 
    divisibility_factor: 16

inference:
  allowed: True
  kwargs:
    output_file_tag: 'gandlf_data_resunet_1_seg'
  
